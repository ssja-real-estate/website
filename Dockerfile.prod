# # build stage
# FROM node:14.18.1 as builder

# COPY package.json yarn.lock ./

# RUN yarn install --frozen-lockfile

# RUN mkdir /ssja && mv ./node_modules ./ssja

# WORKDIR /ssja

# COPY . .

# RUN yarn build

# # production stage
# FROM nginx:alpine as prod

# COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf

# RUN rm -rf /usr/share/nginx/html/*

# COPY --from=builder /ssja/out /usr/share/nginx/html

# EXPOSE 3000 80

# CMD ["nginx", "-g", "daemon off;"]



# build stage
# FROM node:18-alpine as builder

# WORKDIR /app

# COPY package.json package-lock.json ./

# RUN npm ci

# COPY . .

# RUN npm run build

# # production stage
# FROM nginx:alpine as prod

# COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf

# RUN rm -rf /usr/share/nginx/html/*

# COPY --from=builder /app/out /usr/share/nginx/html

# EXPOSE 3000 80

# CMD ["nginx", "-g", "daemon off;"]


# --- Build Stage ---
    FROM node:18-alpine AS builder

    WORKDIR /app
    
    COPY package.json package-lock.json ./
    RUN npm ci
    
    COPY . .
    RUN npm run build
    
    # --- Production Stage ---
    FROM node:18-alpine AS runner
    
    WORKDIR /app
    
    ENV NODE_ENV=production
    
    COPY package.json package-lock.json ./
    RUN npm ci --omit=dev
    
    COPY --from=builder /app/.next .next
    COPY --from=builder /app/public public
    COPY --from=builder /app/next.config.js .
    COPY --from=builder /app/package.json .
    COPY --from=builder /app/package-lock.json .
    
    EXPOSE 3000
    
    CMD ["npm", "run", "start"]
    