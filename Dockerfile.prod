



# #build stage
# FROM node:18-alpine as builder

# WORKDIR /app

# COPY package.json package-lock.json ./

# RUN npm ci

# COPY . .

# RUN npm run build

# # production stage
# FROM nginx:alpine as prod

# COPY ./.nginx/nginx.conf /etc/nginx/nginx.conf

# RUN rm -rf /usr/share/nginx/html/*

# COPY --from=builder /app/out /usr/share/nginx/html

# EXPOSE 3000 80

# CMD ["nginx", "-g", "daemon off;"]


# Stage 1: Build
FROM node:18-alpine AS builder

WORKDIR /app

COPY package.json package-lock.json ./
RUN npm ci

COPY . .

RUN npm run build

# Stage 2: Production
FROM node:18-alpine AS runner

WORKDIR /app

# فقط نیازهای لازم را کپی می‌کنیم
COPY --from=builder /app/.next .next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/next.config.js ./next.config.js
COPY --from=builder /app/tsconfig.json ./tsconfig.json

ENV NODE_ENV=production
EXPOSE 3000

CMD ["npm", "start"]
